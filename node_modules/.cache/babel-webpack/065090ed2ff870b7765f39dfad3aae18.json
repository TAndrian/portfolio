{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/icon\";\nimport * as i2 from \"../skillist/skillist.component\";\nexport let SkillComponent = /*#__PURE__*/(() => {\n  class SkillComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n  }\n\n  SkillComponent.ɵfac = function SkillComponent_Factory(t) {\n    return new (t || SkillComponent)();\n  };\n\n  SkillComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SkillComponent,\n    selectors: [[\"app-skill\"]],\n    decls: 44,\n    vars: 0,\n    consts: [[1, \"pf-skill\"], [1, \"block\"], [1, \"title\"], [1, \"separator\"], [1, \"left-block\"], [1, \"box\"], [1, \"title1\"], [1, \"text\"], [1, \"fas\", \"fa-code-branch\"], [1, \"right-block\"], [1, \"fas\", \"fa-server\"], [1, \"myskill\"], [1, \"block-skill\"], [\"id\", \"title\"], [\"id\", \"title1\"], [1, \"text1\"], [1, \"skillist\"]],\n    template: function SkillComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"h2\", 2);\n        i0.ɵɵtext(3, \" What I have learned ?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"h3\", 6);\n        i0.ɵɵelementStart(8, \"mat-icon\");\n        i0.ɵɵtext(9, \"laptop_mac\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(10, \" Developpement principles \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\", 7);\n        i0.ɵɵtext(12, \" I am applying all the programming rules to make scalable, structured and efficient apps, such as S.O.L.I.D, D.R.Y, K.I.S.S principles, to make the development faster, easier and make the code more maintainable. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 5);\n        i0.ɵɵelementStart(14, \"h3\", 6);\n        i0.ɵɵelement(15, \"i\", 8);\n        i0.ɵɵtext(16, \" Source control \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\", 7);\n        i0.ɵɵtext(18, \" Versioning and managing new program implementations in a team of developers is a tough job. It is solved by using Git version control. Along with it, I push my code on Github and Gitlab Istic to to collaborate with teams. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 9);\n        i0.ɵɵelementStart(20, \"div\", 5);\n        i0.ɵɵelementStart(21, \"h3\", 6);\n        i0.ɵɵelement(22, \"i\", 10);\n        i0.ɵɵtext(23, \" Data structures \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"p\", 7);\n        i0.ɵɵtext(25, \" During my licence, I've discovered some algorithms and models for solving popular data structure problems. Indeed, these skills separates a simple developer from a talented one that outputs efficient codes. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 5);\n        i0.ɵɵelementStart(27, \"h3\", 6);\n        i0.ɵɵelementStart(28, \"mat-icon\");\n        i0.ɵɵtext(29, \"view_list\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(30, \" Design patterns \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"p\", 7);\n        i0.ɵɵtext(32, \" During this year, I discovered some design patterns such as MVP, MVC, MVVM, etc... Those architectures eases the development process and make better scalable and structured code. Factory, MVC, singleton code etc... are the the most popular ones. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 11);\n        i0.ɵɵelementStart(34, \"div\", 12);\n        i0.ɵɵelementStart(35, \"h2\", 13);\n        i0.ɵɵtext(36, \"My skills\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"h3\", 14);\n        i0.ɵɵtext(38, \"I use wonderful techs!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"div\", 3);\n        i0.ɵɵelementStart(40, \"p\", 15);\n        i0.ɵɵtext(41, \" Nowadays, a bunch of new technologies are released every year and programming languages evolve rapidly with new features. So, the key for a successful developer is to learn and master quickly new frameworks or libraries. These tools are meant to ease the development process, to build better apps with less code and more structurated patterns. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 16);\n        i0.ɵɵelement(43, \"app-skillist\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i1.MatIcon, i2.SkillistComponent],\n    styles: [\".pf-skill[_ngcontent-%COMP%]{background-image:url(https://thumbs.dreamstime.com/z/laptop-film-camera-books-wooden-table-beautiful-green-tree-background-181371123.jpg);background-size:cover;background-position:50%;display:flex;width:100%;height:500px;text-align:center}.block[_ngcontent-%COMP%], .pf-skill[_ngcontent-%COMP%]{justify-content:center}.block[_ngcontent-%COMP%]{margin-left:auto;margin-right:auto;display:block;width:90%}.title[_ngcontent-%COMP%]{font-size:30pt;text-align:left;margin-top:15px;color:#fff;text-shadow:0 1px 2px #000}.separator[_ngcontent-%COMP%]{display:block;width:100%;height:4px;background-color:red;margin-bottom:20px}.left-block[_ngcontent-%COMP%]{border-right:2px solid red}.left-block[_ngcontent-%COMP%], .right-block[_ngcontent-%COMP%]{display:inline-block;width:45%}.right-block[_ngcontent-%COMP%]{border-left:2px solid red}.box[_ngcontent-%COMP%]{background-color:#fff;width:100%;box-shadow:0 1px 0 1px #000}.box[_ngcontent-%COMP%]:hover{transform:translateY(-5px);box-shadow:0 1px 5px 4px rgba(216,54,54,.712);transition:.2s;cursor:pointer}.title1[_ngcontent-%COMP%]{color:red;font-size:25pt}.box[_ngcontent-%COMP%]   .title1[_ngcontent-%COMP%]   i[_ngcontent-%COMP%], mat-icon[_ngcontent-%COMP%]{font-size:32px}.text[_ngcontent-%COMP%]{margin-left:10px;margin-right:10px;color:#000}.text[_ngcontent-%COMP%], .text1[_ngcontent-%COMP%]{font-size:15pt;text-align:justify}.text1[_ngcontent-%COMP%]{color:#5a5a5a;margin:0;padding:0}.myskill[_ngcontent-%COMP%]{display:flex;width:100%;justify-content:center;margin-top:96px}.block-skill[_ngcontent-%COMP%]{display:block;width:75%}#title[_ngcontent-%COMP%]{font-size:22pt;text-align:left;color:red}#title1[_ngcontent-%COMP%]{font-size:40pt;color:#000;margin-top:20px;text-shadow:0 1px 2px #000}@media only screen and (max-width:1400px){.pf-skill[_ngcontent-%COMP%]{height:auto}.text[_ngcontent-%COMP%], .text1[_ngcontent-%COMP%]{font-size:15pt}#title1[_ngcontent-%COMP%], .title1[_ngcontent-%COMP%]{font-size:20pt}.box[_ngcontent-%COMP%]   .title1[_ngcontent-%COMP%]   i[_ngcontent-%COMP%], mat-icon[_ngcontent-%COMP%]{font-size:20px}.left-block[_ngcontent-%COMP%], .right-block[_ngcontent-%COMP%]{margin-left:auto;margin-right:auto;border:none;display:block;width:80%}}@media only screen and (max-width:900px){.pf-skill[_ngcontent-%COMP%]{height:auto}.text[_ngcontent-%COMP%], .text1[_ngcontent-%COMP%]{font-size:13pt}.title1[_ngcontent-%COMP%]{font-size:17pt}#title1[_ngcontent-%COMP%], .title[_ngcontent-%COMP%]{font-size:20pt}.box[_ngcontent-%COMP%]   .title1[_ngcontent-%COMP%]   i[_ngcontent-%COMP%], mat-icon[_ngcontent-%COMP%]{font-size:20px}.left-block[_ngcontent-%COMP%], .right-block[_ngcontent-%COMP%]{margin-left:auto;margin-right:auto;border:none;display:block;width:80%}}@media only screen and (max-width:599px){.text[_ngcontent-%COMP%], .text1[_ngcontent-%COMP%]{font-size:13pt}.title1[_ngcontent-%COMP%]{font-size:17pt}#title1[_ngcontent-%COMP%], .title[_ngcontent-%COMP%]{font-size:20pt}.box[_ngcontent-%COMP%]   .title1[_ngcontent-%COMP%]   i[_ngcontent-%COMP%], mat-icon[_ngcontent-%COMP%]{font-size:20px}.left-block[_ngcontent-%COMP%], .right-block[_ngcontent-%COMP%]{border:none;display:block;width:100%}}\"]\n  });\n  return SkillComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}