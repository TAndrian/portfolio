{"ast":null,"code":"import { Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/material/sidenav\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/flex-layout/extended\";\nimport * as i5 from \"@angular/material/toolbar\";\nimport * as i6 from \"@angular/material/list\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/button\";\n\nfunction NavComponent_button_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function NavComponent_button_28_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(2);\n\n      return _r0.toggle();\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 11);\n    i0.ɵɵtext(2, \"menu\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    hidden: a0\n  };\n};\n\nconst _c1 = [\"*\"];\nexport class NavComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver;\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n  }\n\n}\n\nNavComponent.ɵfac = function NavComponent_Factory(t) {\n  return new (t || NavComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n};\n\nNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavComponent,\n  selectors: [[\"app-nav\"]],\n  ngContentSelectors: _c1,\n  decls: 33,\n  vars: 17,\n  consts: [[1, \"sidenav-container\"], [\"fixedInViewport\", \"\", 1, \"sidenav\", 3, \"ngClass\", \"mode\", \"opened\"], [\"drawer\", \"\"], [\"mat-list-item\", \"\", \"href\", \"#about\"], [\"mat-list-item\", \"\", \"href\", \"#skill\"], [\"mat-list-item\", \"\", \"href\", \"#project\"], [\"mat-list-item\", \"\", \"href\", \"#contact\"], [1, \"navbar\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\", 4, \"ngIf\"], [1, \"name\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\"], [\"aria-label\", \"Side nav toggle icon\", 2, \"color\", \"aliceblue\"]],\n  template: function NavComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0);\n      i0.ɵɵelementStart(1, \"mat-sidenav\", 1, 2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵpipe(6, \"async\");\n      i0.ɵɵelementStart(7, \"mat-toolbar\");\n      i0.ɵɵtext(8, \" NAVIGATION\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-nav-list\");\n      i0.ɵɵelementStart(10, \"a\", 3);\n      i0.ɵɵelementStart(11, \"mat-icon\");\n      i0.ɵɵtext(12, \"account_box\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"About me\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"a\", 4);\n      i0.ɵɵelementStart(15, \"mat-icon\");\n      i0.ɵɵtext(16, \"developer_mode\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(17, \"My skills\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"a\", 5);\n      i0.ɵɵelementStart(19, \"mat-icon\");\n      i0.ɵɵtext(20, \" border_color\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21, \"Projects\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"a\", 6);\n      i0.ɵɵelementStart(23, \"mat-icon\");\n      i0.ɵɵtext(24, \" contacts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \" Contacts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"mat-sidenav-content\");\n      i0.ɵɵelementStart(27, \"mat-toolbar\", 7);\n      i0.ɵɵtemplate(28, NavComponent_button_28_Template, 3, 0, \"button\", 8);\n      i0.ɵɵpipe(29, \"async\");\n      i0.ɵɵelementStart(30, \"span\", 9);\n      i0.ɵɵtext(31, \"T. ANDRIAN\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵprojection(32);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, !i0.ɵɵpipeBind1(3, 5, ctx.isHandset$)))(\"mode\", i0.ɵɵpipeBind1(5, 9, ctx.isHandset$) ? \"over\" : \"side\")(\"opened\", i0.ɵɵpipeBind1(6, 11, ctx.isHandset$) === false);\n      i0.ɵɵattribute(\"role\", i0.ɵɵpipeBind1(4, 7, ctx.isHandset$) ? \"dialog\" : \"navigation\");\n      i0.ɵɵadvance(27);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(29, 13, ctx.isHandset$));\n    }\n  },\n  directives: [i2.MatSidenavContainer, i2.MatSidenav, i3.NgClass, i4.DefaultClassDirective, i5.MatToolbar, i6.MatNavList, i6.MatListItem, i7.MatIcon, i2.MatSidenavContent, i3.NgIf, i8.MatButton],\n  pipes: [i3.AsyncPipe],\n  styles: [\".sidenav-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  height: 100%;\\n}\\n\\n.sidenav[_ngcontent-%COMP%] {\\n  width: 280px;\\n  box-shadow: 3px 0 6px rgba(0, 0, 0, 0.384);\\n}\\n\\n.sidenav[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%] {\\n  background-color: rgba(2, 3, 3, 0.911);\\n  color: white;\\n  font-size: 19pt;\\n  z-index: 1;\\n\\n}\\n\\n@media only screen and (max-width: 599px){\\n  .sidenav[_ngcontent-%COMP%]{\\n    width: 200px;\\n  }\\n\\n  .sidenav[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]{\\n    font-size: 13pt;\\n  }\\n}\\n\\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\\n  position: sticky;\\n  top: 0;\\n}\\n\\n.navbar[_ngcontent-%COMP%]{\\n  background-color: rgba(2, 3, 3, 0.911);\\n  position: fixed;\\n  z-index: 1;\\n}\\n\\n.name[_ngcontent-%COMP%]{\\n  font-size: 1.5em;\\n  color: rgba(255, 255, 255, 0.836);\\n  margin-left: 50px;\\n \\n}\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{\\n  padding-bottom: 15px;\\n  width: 145px;\\n  font-size: 20px;\\n}\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{\\n  box-shadow: 0 1px 2px rgb(19, 18, 18);\\n  background-color: rgba(255, 2, 2, 0.555);\\n  border-radius: 5px;\\n  transform: translateX(40px);\\n  transition:  0.5s;\\n  color: #fff;\\n}\\n\\n.hidden[_ngcontent-%COMP%]{\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7RUFDWiwwQ0FBMEM7QUFDNUM7O0FBR0E7RUFDRSxzQ0FBc0M7RUFDdEMsWUFBWTtFQUNaLGVBQWU7RUFDZixVQUFVOztBQUVaOztBQUVBO0VBQ0U7SUFDRSxZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxlQUFlO0VBQ2pCO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsTUFBTTtBQUNSOztBQUVBO0VBQ0Usc0NBQXNDO0VBQ3RDLGVBQWU7RUFDZixVQUFVO0FBQ1o7O0FBSUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUNBQWlDO0VBQ2pDLGlCQUFpQjs7QUFFbkI7O0FBRUE7RUFDRSxvQkFBb0I7RUFDcEIsWUFBWTtFQUNaLGVBQWU7QUFDakI7O0FBRUM7RUFDQyxxQ0FBcUM7RUFDckMsd0NBQXdDO0VBQ3hDLGtCQUFrQjtFQUNsQiwyQkFBMkI7RUFDM0IsaUJBQWlCO0VBQ2pCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7QUFDZiIsImZpbGUiOiJuYXYuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWRlbmF2LWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnNpZGVuYXYge1xuICB3aWR0aDogMjgwcHg7XG4gIGJveC1zaGFkb3c6IDNweCAwIDZweCByZ2JhKDAsIDAsIDAsIDAuMzg0KTtcbn1cblxuXG4uc2lkZW5hdiAubWF0LXRvb2xiYXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIsIDMsIDMsIDAuOTExKTtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXNpemU6IDE5cHQ7XG4gIHotaW5kZXg6IDE7XG5cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1OTlweCl7XG4gIC5zaWRlbmF2e1xuICAgIHdpZHRoOiAyMDBweDtcbiAgfVxuXG4gIC5zaWRlbmF2IC5tYXQtdG9vbGJhcntcbiAgICBmb250LXNpemU6IDEzcHQ7XG4gIH1cbn1cblxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwO1xufVxuXG4ubmF2YmFye1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIsIDMsIDMsIDAuOTExKTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAxO1xufVxuXG5cblxuLm5hbWV7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuODM2KTtcbiAgbWFyZ2luLWxlZnQ6IDUwcHg7XG4gXG59XG5cbm1hdC1uYXYtbGlzdCBhe1xuICBwYWRkaW5nLWJvdHRvbTogMTVweDtcbiAgd2lkdGg6IDE0NXB4O1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbiBtYXQtbmF2LWxpc3QgYTpob3ZlcntcbiAgYm94LXNoYWRvdzogMCAxcHggMnB4IHJnYigxOSwgMTgsIDE4KTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDIsIDIsIDAuNTU1KTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNDBweCk7XG4gIHRyYW5zaXRpb246ICAwLjVzO1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmhpZGRlbntcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuXG5cblxuXG4gIFxuIl19 */\"]\n});","map":{"version":3,"sources":["/home/lost/Bureau/portfolio clone/portfolio/src/app/nav/nav.component.ts","/home/lost/Bureau/portfolio clone/portfolio/src/app/nav/nav.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n  \n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" \n      fixedInViewport\n      [ngClass]=\"{hidden: !(isHandset$ |async)}\"\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar> NAVIGATION</mat-toolbar>\n     <mat-nav-list > \n        <a mat-list-item href=\"#about\" > <mat-icon>account_box</mat-icon>About me</a>\n        <a mat-list-item href=\"#skill\" > <mat-icon>developer_mode</mat-icon>My skills</a>\n        <a mat-list-item href=\"#project\" > <mat-icon> border_color</mat-icon>Projects</a>\n        <a mat-list-item href=\"#contact\" > <mat-icon> contacts</mat-icon> Contacts</a>\n      </mat-nav-list>\n    \n   \n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <mat-toolbar class=\"navbar\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon style=\"color: aliceblue;\" aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n    <span class=\"name\">T. ANDRIAN</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <ng-content></ng-content>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}