{"version":3,"file":"nghacks-image-viewer.js","sources":["../../../projects/image-viewer/src/lib/components/image-viewer/image-viewer.component.ts","../../../projects/image-viewer/src/lib/directives/image-viewer.directive.ts","../../../projects/image-viewer/src/lib/image-viewer.module.ts","../../../projects/image-viewer/src/public-api.ts","../../../projects/image-viewer/src/nghacks-image-viewer.ts"],"names":[],"mappings":"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","sourcesContent":["import { isPlatformBrowser } from '@angular/common';\nimport { Component, HostListener, Inject, OnDestroy, OnInit, PLATFORM_ID } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\nexport class ImageDimension {\n  public width: number;\n  public height: number;\n\n  constructor(width = 0, height = 0) {\n    this.height = height;\n    this.width = width;\n  }\n}\n\nexport interface ImageViewerDialogData { src: string; alt: string; }\n\n@Component({\n  selector: 'lib-image-viewer',\n  templateUrl: './image-viewer.component.html',\n  styleUrls: ['./image-viewer.component.scss']\n})\nexport class ImageViewerComponent implements OnInit, OnDestroy {\n\n  src: string;\n  alt: string;\n\n  calculatedImageDimension: ImageDimension;\n  imageLoaded: boolean;\n  hideCloseBtn: boolean;\n\n  private _originalImageDimension: ImageDimension;\n  private _unsubscribeAll: Subject<any> = new Subject();\n  private _document: Document;\n\n  constructor(\n    @Inject(DOCUMENT) private _nativeDocument: any,\n    @Inject(MAT_DIALOG_DATA) private _data: ImageViewerDialogData,\n    @Inject(PLATFORM_ID) private _platformId: any,\n    private _dialogRef: MatDialogRef<ImageViewerComponent>,\n  ) {\n    this._document = this._nativeDocument as Document;\n  }\n\n  async ngOnInit(): Promise<void> {\n    this._originalImageDimension = await this.getOriginalImageDimension(this._data.src);\n    this.setImageDimension();\n    this.src = this._data.src;\n    this.alt = this._data.alt;\n    this.imageLoaded = true;\n\n    // hide the close button before dialog close\n    // Otherwise it apears inside image\n    this._dialogRef.beforeClosed()\n      .pipe(\n        takeUntil(this._unsubscribeAll)\n      )\n      .subscribe(res => {\n        this.hideCloseBtn = true;\n      });\n  }\n\n  @HostListener('window:resize', ['$event'])\n  private setImageDimension(): void {\n\n    if (!isPlatformBrowser(this._platformId)) { return; }\n\n    const windowDimension = new ImageDimension(\n      this.percentage(this._document.body.clientWidth, 90),\n      this.percentage(this._document.body.clientHeight, 90)\n    );\n    this.calculatedImageDimension = this.calculateAspectRatioFit(this._originalImageDimension, windowDimension);\n  }\n\n  private calculateAspectRatioFit(srcDimension: ImageDimension, maxDimension: ImageDimension): ImageDimension {\n    if (srcDimension.height <= maxDimension.height && srcDimension.width <= maxDimension.width) {\n      return srcDimension;\n    }\n    const ratio = Math.min(maxDimension.width / srcDimension.width, maxDimension.height / srcDimension.height);\n    return new ImageDimension(srcDimension.width * ratio, srcDimension.height * ratio);\n  }\n\n  private getOriginalImageDimension(imageUrl: string): Promise<ImageDimension> {\n\n    if (!imageUrl) { return; }\n\n    return new Promise(res => {\n      const img = new Image();\n      img.onload = (event) => {\n        const loadedImage: any = event.currentTarget;\n        const dimension = new ImageDimension(loadedImage.width, loadedImage.height);\n        return res(dimension);\n      };\n      img.src = imageUrl;\n\n    });\n  }\n\n  private percentage(total: number, percent: number): number {\n    return ((percent / 100) * total);\n  }\n\n  public ngOnDestroy(): void {\n    this._unsubscribeAll.next();\n    this._unsubscribeAll.complete();\n  }\n\n\n}\n","import { Directive, ElementRef, HostBinding, HostListener, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ImageViewerComponent } from '../components/image-viewer/image-viewer.component';\n\n@Directive({\n  selector: '[imageViewer]'\n})\nexport class ImageViewerDirective {\n\n  @HostBinding('style.cursor') private _cursor;\n\n  /**\n   * @description Image source URL\n   */\n  @Input() src: string;\n\n  /**\n   * @description Alnernate text for image\n   */\n  @Input() alt: string;\n\n  private _disabled: boolean;\n\n  /**\n   * @description Disables image viewer\n   */\n  @Input('disabled')\n  public set disabled(v: boolean) {\n    this._disabled = v;\n    if (v) {\n      this._cursor = 'initial';\n    }\n  }\n\n  private _customSrc: string;\n\n  @Input('imageViewer')\n  public set customSrc(v: string) {\n    if (!v) { return; }\n    this._customSrc = v;\n  }\n\n  constructor(\n    private _elRef: ElementRef,\n    private _dialog: MatDialog\n  ) {\n    if (this._elRef.nativeElement.tagName === 'IMG') {\n      this._cursor = 'zoom-in';\n    }\n  }\n\n\n  @HostListener('click')\n  public viewImage(): void {\n\n    if (this._disabled) { return; }\n\n    this._dialog.open(\n      ImageViewerComponent,\n      {\n        autoFocus: false,\n        data: {\n          src: this._customSrc || this.src,\n          alt: this.alt\n        },\n        panelClass: 'ng-hacks-image-viewer',\n        backdropClass: 'ng-hacks-image-viewer-backdrop'\n      }\n    );\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { ImageViewerComponent } from './components/image-viewer/image-viewer.component';\nimport { ImageViewerDirective } from './directives/image-viewer.directive';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    ImageViewerComponent,\n    ImageViewerDirective\n  ],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    MatIconModule\n  ],\n  exports: [\n    ImageViewerDirective\n  ]\n})\nexport class ImageViewerModule { }\n","/*\n * Public API Surface of image-viewer\n */\n\n// export * from './lib/components/image-viewer/image-viewer.component';\nexport * from './lib/directives/image-viewer.directive';\nexport * from './lib/image-viewer.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ImageViewerComponent as ɵa} from './lib/components/image-viewer/image-viewer.component';"]}